package src.com.atguigu.floyd;

import java.util.Arrays;

public class FloydAlgorithm {

	public static void main(String[] args) {
		// ???????????????
		char[] vertex = { 'A', 'B', 'C', 'D', 'E', 'F', 'G' };
		//??????????
		int[][] matrix = new int[vertex.length][vertex.length];
		final int N = 65535;
		matrix[0] = new int[] { 0, 5, 7, N, N, N, 2 };
		matrix[1] = new int[] { 5, 0, N, 9, N, N, 3 };
		matrix[2] = new int[] { 7, N, 0, N, 8, N, N };
		matrix[3] = new int[] { N, 9, N, 0, N, 4, N };
		matrix[4] = new int[] { N, N, 8, N, 0, 5, 4 };
		matrix[5] = new int[] { N, N, N, 4, 5, 0, 6 };
		matrix[6] = new int[] { 2, 3, N, N, 4, 6, 0 };
		
		//???? Graph ????
		Graph graph = new Graph(vertex.length, matrix, vertex);
		//?????????????
		graph.floyd();
		graph.show();
	}

}

// ?????
class Graph {
	private char[] vertex; // ???????????
	private int[][] dis; // ???棬???????????????????????????????????????????????
	private int[][] pre;// ???浽???????????????

	// ??????
	/**
	 * 
	 * @param length
	 *            ??С
	 * @param matrix
	 *            ??????
	 * @param vertex
	 *            ????????
	 */
	public Graph(int length, int[][] matrix, char[] vertex) {
		this.vertex = vertex;
		this.dis = matrix;
		this.pre = new int[length][length];
		// ??pre????????, ?????????????????±?
		for (int i = 0; i < length; i++) {
			Arrays.fill(pre[i], i);
		}
	}

	// ???pre?????dis????
	public void show() {

		//????????????????????????????
		char[] vertex = { 'A', 'B', 'C', 'D', 'E', 'F', 'G' };
		for (int k = 0; k < dis.length; k++) {
			// ???pre????????????
			for (int i = 0; i < dis.length; i++) {
				System.out.print(vertex[pre[k][i]] + " ");
			}
			System.out.println();
			// ???dis????????????
			for (int i = 0; i < dis.length; i++) {
				System.out.print("("+vertex[k]+"??"+vertex[i]+"?????·????" + dis[k][i] + ") ");
			}
			System.out.println();
			System.out.println();

		}

	}
	
	//??????????, ?????????????????????
	public void floyd() {
		int len = 0; //???????????
		//???м???????? k ?????м?????±? [A, B, C, D, E, F, G] 
		for(int k = 0; k < dis.length; k++) { // 
			//??i????????? [A, B, C, D, E, F, G]
			for(int i = 0; i < dis.length; i++) {
				//????j???? // [A, B, C, D, E, F, G]
				for(int j = 0; j < dis.length; j++) {
					len = dis[i][k] + dis[k][j];// => ?????i ????????????? k?м??????? j ???????
					if(len < dis[i][j]) {//???lenС?? dis[i][j]
						dis[i][j] = len;//???????
						pre[i][j] = pre[k][j];//???????????
					}
				}
			}
		}
	}
}
